<?php

use League\OAuth2\Server\Entities\AccessTokenEntityInterface;
use Drupal\Core\Logger\RfcLogLevel;
use Symfony\Component\HttpFoundation\JsonResponse;

const INDICIA_ID_FIELD = 'field_indicia_user_id';


/**
 * Logs messages if in log mode.
 *
 * Messages go to the PHP error log and the Drupal error log.
 */
function indicia_api_log($message, $severity = RfcLogLevel::NOTICE)
{
  \Drupal::logger('indicia_api')->log($severity, $message);
}

/**
 * Prints to log and returns a json formatted error back to the client.
 *
 * @param int $code
 *   Status code of the header.
 * @param string $status
 *   Status of the header.
 * @param string $title
 *   Title of the error.
 * @param null $errors
 *   If multiple errors then it can be passed as an array.
 */

function error_print($code, $status, $title, $errors = null)
{
  $headers = [
    'Status' => $code . ' ' . $status,
    'Access-Control-Allow-Origin' => '*',
    'Access-Control-Allow-Methods' => 'GET,PUT,OPTIONS',
    'Access-Control-Allow-Headers' => 'authorization, x-api-key',
  ];
  if (is_null($errors)) {
    $data = [
      'errors' => [
        [
          'status' => (string) $code,
          'title' => $title,
        ],
      ],
    ];

    indicia_api_log($title, RfcLogLevel::ERROR);
  } else {
    indicia_api_log('Errors', RfcLogLevel::ERROR);
    indicia_api_log(print_r($errors, 1), RfcLogLevel::ERROR);

    $data = [
      'errors' => $errors,
    ];
  }
  return new JsonResponse($data, $code, $headers);
}


function indicia_api_simple_oauth_private_claims_alter(array &$data, AccessTokenEntityInterface $token) {
  $user = \Drupal::entityTypeManager()
        ->getStorage('user')
        ->load($token->getUserIdentifier());

  global $base_url;

  $data['iss'] = $base_url;
	$data['email'] = $user->get('mail')->value;
  $data['email_verified'] = !$user->isBlocked();

  // attach custom user entity fields
  $data['https://indicia/user/id'] = $user->get(INDICIA_ID_FIELD)->value;

  if ($user->hasField('field_full_name')) {
    $data['field_full_name'] = $user->get('field_full_name')->value;
  }

  if ($user->hasField('field_first_name')) {
    $data['field_first_name'] = $user->get('field_first_name')->value;
  }

  if ($user->hasField('field_last_name')) {
    $data['field_last_name'] = $user->get('field_last_name')->value;
  }
}